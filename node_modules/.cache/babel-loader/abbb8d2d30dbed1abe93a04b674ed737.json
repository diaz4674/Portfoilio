{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\src\\\\components\\\\Projects\\\\Description.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  @media (max-width: 960px) {\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Title, Live, Text } from \"./_Style.js\"; // Technology description Component\n\nclass Desciption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      font: \"\",\n      background: \"\",\n      stroke: \"\",\n      hoverColor: \"\"\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.mode === undefined) {\n      return null;\n    } else {\n      let _nextProps$mode = nextProps.mode,\n          font = _nextProps$mode.font,\n          background = _nextProps$mode.background,\n          stroke = _nextProps$mode.stroke,\n          hoverColor = _nextProps$mode.hoverColor;\n      this.setState({\n        font,\n        background,\n        stroke,\n        hoverColor\n      });\n    }\n  }\n\n  render() {\n    let _this$state = this.state,\n        font = _this$state.font,\n        background = _this$state.background,\n        stroke = _this$state.stroke,\n        hoverColor = _this$state.hoverColor;\n    let _this$props = this.props,\n        description = _this$props.description,\n        tech = _this$props.tech,\n        link = _this$props.link,\n        gitrepo = _this$props.gitrepo;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      mode: font,\n      fontSize: \"37px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \" \", \"Summary\", \" \"), /*#__PURE__*/React.createElement(Text, {\n      mode: font,\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, description), /*#__PURE__*/React.createElement(Title, {\n      mode: font,\n      fontSize: \"37px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \" \", \"Tech Stack\", \" \"), /*#__PURE__*/React.createElement(Text, {\n      mode: font,\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \" \", tech), /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Live, {\n      href: link,\n      target: \"_blank\",\n      font: font,\n      background: background,\n      stroke: stroke,\n      hoverColor: hoverColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Live Site\"), /*#__PURE__*/React.createElement(Live, {\n      href: gitrepo,\n      target: \"_blank\",\n      font: font,\n      background: background,\n      stroke: stroke,\n      hoverColor: hoverColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Github Repo\")));\n  }\n\n} // Styles\n\n\nconst Container = styled.div(_templateObject()); // const Title = styled.p`\n// \tcolor: black;\n// \tfont-family: Bangers;\n// \tfont-size: 37px;\n// \tmargin: 0;\n// `;\n// const Text = styled.p`\n// \tmargin: 0;\n// \tfont-size: 20px;\n// \tdisplay: flex;\n// \tfont-weight: 100;\n// \tjustify-content: center;\n// \talign-items: center;\n// \tfont-family: \"raleway-bold\";\n// \tcolor: black;\n// `;\n\nconst ButtonContainer = styled.div(_templateObject2());\nexport default Desciption;","map":{"version":3,"sources":["C:/Users/diaz4/Documents/projects/portfolio/Portfolio-React/src/components/Projects/Description.js"],"names":["React","styled","Title","Live","Text","Desciption","Component","constructor","props","state","font","background","stroke","hoverColor","UNSAFE_componentWillReceiveProps","nextProps","mode","undefined","setState","render","description","tech","link","gitrepo","Container","div","ButtonContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAkC,aAAlC,C,CAEA;;AACA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAMD;;AACDC,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AAC1C,QAAIA,SAAS,CAACC,IAAV,KAAmBC,SAAvB,EAAkC;AAChC,aAAO,IAAP;AACD,KAFD,MAEO;AAAA,4BAC0CF,SAAS,CAACC,IADpD;AAAA,UACCN,IADD,mBACCA,IADD;AAAA,UACOC,UADP,mBACOA,UADP;AAAA,UACmBC,MADnB,mBACmBA,MADnB;AAAA,UAC2BC,UAD3B,mBAC2BA,UAD3B;AAEL,WAAKK,QAAL,CAAc;AACZR,QAAAA,IADY;AAEZC,QAAAA,UAFY;AAGZC,QAAAA,MAHY;AAIZC,QAAAA;AAJY,OAAd;AAMD;AACF;;AACDM,EAAAA,MAAM,GAAG;AAAA,sBACwC,KAAKV,KAD7C;AAAA,QACDC,IADC,eACDA,IADC;AAAA,QACKC,UADL,eACKA,UADL;AAAA,QACiBC,MADjB,eACiBA,MADjB;AAAA,QACyBC,UADzB,eACyBA,UADzB;AAAA,sBAEoC,KAAKL,KAFzC;AAAA,QAEDY,WAFC,eAEDA,WAFC;AAAA,QAEYC,IAFZ,eAEYA,IAFZ;AAAA,QAEkBC,IAFlB,eAEkBA,IAFlB;AAAA,QAEwBC,OAFxB,eAEwBA,OAFxB;AAGP,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEb,IAAb;AAAmB,MAAA,QAAQ,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,aAEU,GAFV,CADF,eAKE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,QAAQ,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGU,WADH,CALF,eAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEV,IAAb;AAAmB,MAAA,QAAQ,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,gBAEa,GAFb,CARF,eAYE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,QAAQ,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGW,IAFH,CAZF,eAgBE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAEZ,IAHR;AAIE,MAAA,UAAU,EAAEC,UAJd;AAKE,MAAA,MAAM,EAAEC,MALV;AAME,MAAA,UAAU,EAAEC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAWE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEU,OADR;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAEb,IAHR;AAIE,MAAA,UAAU,EAAEC,UAJd;AAKE,MAAA,MAAM,EAAEC,MALV;AAME,MAAA,UAAU,EAAEC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,CAhBF,CADF;AAyCD;;AAnEsC,C,CAsEzC;;;AACA,MAAMW,SAAS,GAAGvB,MAAM,CAACwB,GAAV,mBAAf,C,CAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGzB,MAAM,CAACwB,GAAV,oBAArB;AAWA,eAAepB,UAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Title, Live, Text } from \"./_Style.js\";\r\n\r\n// Technology description Component\r\nclass Desciption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      font: \"\",\r\n      background: \"\",\r\n      stroke: \"\",\r\n      hoverColor: \"\",\r\n    };\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.mode === undefined) {\r\n      return null;\r\n    } else {\r\n      let { font, background, stroke, hoverColor } = nextProps.mode;\r\n      this.setState({\r\n        font,\r\n        background,\r\n        stroke,\r\n        hoverColor,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    let { font, background, stroke, hoverColor } = this.state;\r\n    let { description, tech, link, gitrepo } = this.props;\r\n    return (\r\n      <Container>\r\n        <Title mode={font} fontSize=\"37px\">\r\n          {\" \"}\r\n          Summary{\" \"}\r\n        </Title>\r\n        <Text mode={font} fontSize=\"20px\">\r\n          {description}\r\n        </Text>\r\n        <Title mode={font} fontSize=\"37px\">\r\n          {\" \"}\r\n          Tech Stack{\" \"}\r\n        </Title>\r\n        <Text mode={font} fontSize=\"20px\">\r\n          {\" \"}\r\n          {tech}\r\n        </Text>\r\n        <ButtonContainer>\r\n          <Live\r\n            href={link}\r\n            target=\"_blank\"\r\n            font={font}\r\n            background={background}\r\n            stroke={stroke}\r\n            hoverColor={hoverColor}\r\n          >\r\n            Live Site\r\n          </Live>\r\n          <Live\r\n            href={gitrepo}\r\n            target=\"_blank\"\r\n            font={font}\r\n            background={background}\r\n            stroke={stroke}\r\n            hoverColor={hoverColor}\r\n          >\r\n            Github Repo\r\n          </Live>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// Styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`;\r\n\r\n// const Title = styled.p`\r\n// \tcolor: black;\r\n// \tfont-family: Bangers;\r\n// \tfont-size: 37px;\r\n// \tmargin: 0;\r\n// `;\r\n\r\n// const Text = styled.p`\r\n// \tmargin: 0;\r\n// \tfont-size: 20px;\r\n// \tdisplay: flex;\r\n// \tfont-weight: 100;\r\n// \tjustify-content: center;\r\n// \talign-items: center;\r\n// \tfont-family: \"raleway-bold\";\r\n// \tcolor: black;\r\n// `;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media (max-width: 960px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport default Desciption;\r\n"]},"metadata":{},"sourceType":"module"}