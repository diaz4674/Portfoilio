{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\src\\\\components\\\\Projects\\\\Description.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\t@media (max-width: 960px) {\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\tpadding: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Title, Live, Text } from \"./_Style.js\";\nimport { connect } from \"react-redux\"; // Technology description Component\n\nclass Desciption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proMode: true\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            console.log(_this.props.mode, \"STATESSS\");\n\n            if (!(_this.props.state.professionalMode === true)) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return _this.setState({\n              proMode: false,\n              font: \"raleway-bold\",\n              background: \"#ffb6af\",\n              stroke: \"\",\n              hoverColor: \"#f77063\"\n            });\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _this.setState({\n              proMode: false,\n              font: \"Bangers\",\n              background: \"#fffb9b\",\n              stroke: \"1px black\",\n              hoverColor: \"#f5bd07\"\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  render() {\n    let _this$props = this.props,\n        description = _this$props.description,\n        tech = _this$props.tech,\n        link = _this$props.link,\n        gitrepo = _this$props.gitrepo;\n    let _this$state = this.state,\n        font = _this$state.font,\n        background = _this$state.background,\n        stroke = _this$state.stroke,\n        hoverColor = _this$state.hoverColor;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      fontSize: \"37px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \" Summary \"), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, description), /*#__PURE__*/React.createElement(Title, {\n      fontSize: \"37px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \" Tech Stack \"), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, \" \", tech), /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Live, {\n      href: link,\n      target: \"_blank\",\n      font: font,\n      background: background,\n      stroke: stroke,\n      hoverColor: hoverColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, \"Live Site\"), /*#__PURE__*/React.createElement(Live, {\n      href: gitrepo,\n      target: \"_blank\",\n      font: font,\n      background: background,\n      stroke: stroke,\n      hoverColor: hoverColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }\n    }, \"Github Repo\")));\n  }\n\n} // Styles\n\n\nconst Container = styled.div(_templateObject()); // const Title = styled.p`\n// \tcolor: black;\n// \tfont-family: Bangers;\n// \tfont-size: 37px;\n// \tmargin: 0;\n// `;\n// const Text = styled.p`\n// \tmargin: 0;\n// \tfont-size: 20px;\n// \tdisplay: flex;\n// \tfont-weight: 100;\n// \tjustify-content: center;\n// \talign-items: center;\n// \tfont-family: \"raleway-bold\";\n// \tcolor: black;\n// `;\n\nconst ButtonContainer = styled.div(_templateObject2());\n\nconst mapStateToProps = state => ({\n  state\n});\n\nexport default connect(mapStateToProps)(Desciption);","map":{"version":3,"sources":["C:/Users/diaz4/Documents/projects/portfolio/Portfolio-React/src/components/Projects/Description.js"],"names":["React","styled","Title","Live","Text","connect","Desciption","Component","constructor","props","state","proMode","componentDidMount","console","log","mode","professionalMode","setState","font","background","stroke","hoverColor","render","description","tech","link","gitrepo","Container","div","ButtonContainer","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Title, Live, Text } from \"./_Style.js\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Technology description Component\r\nclass Desciption extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tproMode: true,\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tconsole.log(this.props.mode, \"STATESSS\");\r\n\t\tthis.props.state.professionalMode === true\r\n\t\t\t? await this.setState({\r\n\t\t\t\t\tproMode: false,\r\n\t\t\t\t\tfont: \"raleway-bold\",\r\n\t\t\t\t\tbackground: \"#ffb6af\",\r\n\t\t\t\t\tstroke: \"\",\r\n\t\t\t\t\thoverColor: \"#f77063\",\r\n\t\t\t  })\r\n\t\t\t: await this.setState({\r\n\t\t\t\t\tproMode: false,\r\n\t\t\t\t\tfont: \"Bangers\",\r\n\t\t\t\t\tbackground: \"#fffb9b\",\r\n\t\t\t\t\tstroke: \"1px black\",\r\n\t\t\t\t\thoverColor: \"#f5bd07\",\r\n\t\t\t  });\r\n\t}\r\n\trender() {\r\n\t\tlet { description, tech, link, gitrepo } = this.props;\r\n\t\tlet { font, background, stroke, hoverColor } = this.state;\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Title fontSize=\"37px\"> Summary </Title>\r\n\t\t\t\t<Text fontSize=\"20px\">{description}</Text>\r\n\t\t\t\t<Title fontSize=\"37px\"> Tech Stack </Title>\r\n\t\t\t\t<Text fontSize=\"20px\"> {tech}</Text>\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<Live\r\n\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\tfont={font}\r\n\t\t\t\t\t\tbackground={background}\r\n\t\t\t\t\t\tstroke={stroke}\r\n\t\t\t\t\t\thoverColor={hoverColor}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLive Site\r\n\t\t\t\t\t</Live>\r\n\t\t\t\t\t<Live\r\n\t\t\t\t\t\thref={gitrepo}\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\tfont={font}\r\n\t\t\t\t\t\tbackground={background}\r\n\t\t\t\t\t\tstroke={stroke}\r\n\t\t\t\t\t\thoverColor={hoverColor}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGithub Repo\r\n\t\t\t\t\t</Live>\r\n\t\t\t\t</ButtonContainer>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Styles\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 10px;\r\n`;\r\n\r\n// const Title = styled.p`\r\n// \tcolor: black;\r\n// \tfont-family: Bangers;\r\n// \tfont-size: 37px;\r\n// \tmargin: 0;\r\n// `;\r\n\r\n// const Text = styled.p`\r\n// \tmargin: 0;\r\n// \tfont-size: 20px;\r\n// \tdisplay: flex;\r\n// \tfont-weight: 100;\r\n// \tjustify-content: center;\r\n// \talign-items: center;\r\n// \tfont-family: \"raleway-bold\";\r\n// \tcolor: black;\r\n// `;\r\n\r\nconst ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t@media (max-width: 960px) {\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\n\r\nexport default connect(mapStateToProps)(Desciption);\r\n"]},"metadata":{},"sourceType":"module"}