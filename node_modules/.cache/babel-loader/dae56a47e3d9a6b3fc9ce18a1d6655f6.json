{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\diaz4\\\\Documents\\\\projects\\\\portfolio\\\\Portfolio-React\\\\src\\\\components\\\\Projects\\\\Description.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\t@media (max-width: 960px) {\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\tpadding: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Title, Live, Text } from \"./_Style.js\";\nimport { connect } from \"react-redux\"; // Technology description Component\n\nclass Desciption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      font: \"\",\n      background: \"\",\n      stroke: \"\",\n      hoverColor: \"\"\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.mode === undefined) {\n      return null;\n    } else {\n      let _nextProps$mode = nextProps.mode,\n          font = _nextProps$mode.font,\n          background = _nextProps$mode.background,\n          stroke = _nextProps$mode.stroke,\n          hoverColor = _nextProps$mode.hoverColor;\n      this.setState({\n        font,\n        background,\n        stroke,\n        hoverColor\n      });\n    }\n  }\n\n  render() {\n    let _this$state = this.state,\n        font = _this$state.font,\n        background = _this$state.background,\n        stroke = _this$state.stroke,\n        hoverColor = _this$state.hoverColor;\n    let _this$props = this.props,\n        description = _this$props.description,\n        tech = _this$props.tech,\n        link = _this$props.link,\n        gitrepo = _this$props.gitrepo;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      mode: font,\n      fontSize: \"37px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, \" \", \"Summary\", \" \"), /*#__PURE__*/React.createElement(Text, {\n      mode: font,\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, description), /*#__PURE__*/React.createElement(Title, {\n      mode: font,\n      fontSize: \"37px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, \" \", \"Tech Stack\", \" \"), /*#__PURE__*/React.createElement(Text, {\n      mode: font,\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, \" \", tech), /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Live, {\n      href: link,\n      target: \"_blank\",\n      font: font,\n      background: background,\n      stroke: stroke,\n      hoverColor: hoverColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }, \"Live Site\"), /*#__PURE__*/React.createElement(Live, {\n      href: gitrepo,\n      target: \"_blank\",\n      font: font,\n      background: background,\n      stroke: stroke,\n      hoverColor: hoverColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, \"Github Repo\")));\n  }\n\n} // Styles\n\n\nconst Container = styled.div(_templateObject()); // const Title = styled.p`\n// \tcolor: black;\n// \tfont-family: Bangers;\n// \tfont-size: 37px;\n// \tmargin: 0;\n// `;\n// const Text = styled.p`\n// \tmargin: 0;\n// \tfont-size: 20px;\n// \tdisplay: flex;\n// \tfont-weight: 100;\n// \tjustify-content: center;\n// \talign-items: center;\n// \tfont-family: \"raleway-bold\";\n// \tcolor: black;\n// `;\n\nconst ButtonContainer = styled.div(_templateObject2());\n\nconst mapStateToProps = state => ({\n  state\n});\n\nexport default connect(mapStateToProps)(Desciption);","map":{"version":3,"sources":["C:/Users/diaz4/Documents/projects/portfolio/Portfolio-React/src/components/Projects/Description.js"],"names":["React","styled","Title","Live","Text","connect","Desciption","Component","constructor","props","state","font","background","stroke","hoverColor","UNSAFE_componentWillReceiveProps","nextProps","mode","undefined","setState","render","description","tech","link","gitrepo","Container","div","ButtonContainer","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Title, Live, Text } from \"./_Style.js\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Technology description Component\r\nclass Desciption extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfont: \"\",\r\n\t\t\tbackground: \"\",\r\n\t\t\tstroke: \"\",\r\n\t\t\thoverColor: \"\",\r\n\t\t};\r\n\t}\r\n\tUNSAFE_componentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.mode === undefined) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tlet { font, background, stroke, hoverColor } = nextProps.mode;\r\n\t\t\tthis.setState({\r\n\t\t\t\tfont,\r\n\t\t\t\tbackground,\r\n\t\t\t\tstroke,\r\n\t\t\t\thoverColor,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tlet { font, background, stroke, hoverColor } = this.state;\r\n\t\tlet { description, tech, link, gitrepo } = this.props;\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Title mode={font} fontSize=\"37px\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\tSummary{\" \"}\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Text mode={font} fontSize=\"20px\">\r\n\t\t\t\t\t{description}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Title mode={font} fontSize=\"37px\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\tTech Stack{\" \"}\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Text mode={font} fontSize=\"20px\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{tech}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<Live\r\n\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\tfont={font}\r\n\t\t\t\t\t\tbackground={background}\r\n\t\t\t\t\t\tstroke={stroke}\r\n\t\t\t\t\t\thoverColor={hoverColor}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLive Site\r\n\t\t\t\t\t</Live>\r\n\t\t\t\t\t<Live\r\n\t\t\t\t\t\thref={gitrepo}\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\tfont={font}\r\n\t\t\t\t\t\tbackground={background}\r\n\t\t\t\t\t\tstroke={stroke}\r\n\t\t\t\t\t\thoverColor={hoverColor}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGithub Repo\r\n\t\t\t\t\t</Live>\r\n\t\t\t\t</ButtonContainer>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Styles\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 10px;\r\n`;\r\n\r\n// const Title = styled.p`\r\n// \tcolor: black;\r\n// \tfont-family: Bangers;\r\n// \tfont-size: 37px;\r\n// \tmargin: 0;\r\n// `;\r\n\r\n// const Text = styled.p`\r\n// \tmargin: 0;\r\n// \tfont-size: 20px;\r\n// \tdisplay: flex;\r\n// \tfont-weight: 100;\r\n// \tjustify-content: center;\r\n// \talign-items: center;\r\n// \tfont-family: \"raleway-bold\";\r\n// \tcolor: black;\r\n// `;\r\n\r\nconst ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t@media (max-width: 960px) {\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({ state });\r\n\r\nexport default connect(mapStateToProps)(Desciption);\r\n"]},"metadata":{},"sourceType":"module"}